{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_router_view"],"sources":["/Users/gorkem/Desktop/vue-work/vue-project/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <router-view />\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  \n  export default {\n    name: 'App',\n    data() {\n      return {\n        tasks: [],\n        monthly : [],\n        weekly : [],\n        daily : []\n      }\n    },\n    created() {\n        axios.get('https://jobs.tipiteq.com/dummy_data.json')\n          .then(response => {\n            this.tasks = Array.prototype.slice.call(Object.values(response.data));\n            this.tasks = this.tasks[0]\n            let getLength = this.tasks.length\n            for(let i = 0; i < getLength; i++){\n                if(this.tasks[i].occurrence === \"daily\"){\n                    this.daily.push(this.tasks[i])\n                }\n                if(this.tasks[i].occurrence === \"weekly\"){\n                    this.weekly.push(this.tasks[i])\n                }\n                if(this.tasks[i].occurrence === \"monthly\"){\n                    this.monthly.push(this.tasks[i])\n                }\n            }\n          }).catch(error => {\n            console.error('Error fetching tasks:', error)\n          })\n    }\n  }\n</script>\n\n<style>\n/* Stil tanımlamaları buraya */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAeC,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}