{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"description\"\n};\nconst _hoisted_3 = {\n  class: \"type\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"TaskBox\"\n    }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(task.description), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(task.events, event => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: event,\n        class: \"events\"\n      }, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString(event.type), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","tasks","task","index","key","_createElementVNode","_hoisted_2","_toDisplayString","description","events","event","_hoisted_3","type"],"sources":["/Users/gorkem/Desktop/vue-work/vue-project/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-for=\"(task, index) in tasks\" :key=\"index\" class=\"TaskBox\">\n      <div class=\"description\">{{ task.description }}</div>\n      <div v-for=\"event in task.events\" :key=\"event\" class=\"events\">\n        <div class=\"type\">{{ event.type }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      tasks: [],\n    }\n  },\n  methods: {\n    fetchTasks() {\n      axios.get('https://jobs.tipiteq.com/dummy_data.json')\n        .then(response => {\n          this.tasks = Object.values(response.data)\n          console.log(this.tasks)\n        }).catch(error => {\n          console.error('Error fetching tasks:', error)\n        })\n    }\n  },\n  created() {\n      axios.get('https://jobs.tipiteq.com/dummy_data.json')\n        .then(response => {\n          this.tasks = Array.prototype.slice.call(Object.values(response.data));\n          this.tasks = this.tasks[0]\n        }).catch(error => {\n          console.error('Error fetching tasks:', error)\n        })\n  }\n}\n</script>\n\n<style>\n/* Stil tanımlamaları buraya */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAM;;uBAJvBC,mBAAA,CAOM,OAPNC,UAOM,I,kBANJD,mBAAA,CAKME,SAAA,QAPVC,WAAA,CAEiCC,KAAA,CAAAC,KAAK,EAFtC,CAEiBC,IAAI,EAAEC,KAAK;yBAAxBP,mBAAA,CAKM;MAL+BQ,GAAG,EAAED,KAAK;MAAER,KAAK,EAAC;QACrDU,mBAAA,CAAqD,OAArDC,UAAqD,EAAAC,gBAAA,CAAzBL,IAAI,CAACM,WAAW,mB,kBAC5CZ,mBAAA,CAEME,SAAA,QANZC,WAAA,CAI2BG,IAAI,CAACO,MAAM,EAApBC,KAAK;2BAAjBd,mBAAA,CAEM;QAF6BQ,GAAG,EAAEM,KAAK;QAAEf,KAAK,EAAC;UACnDU,mBAAA,CAAwC,OAAxCM,UAAwC,EAAAJ,gBAAA,CAAnBG,KAAK,CAACE,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}