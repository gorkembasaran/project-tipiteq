{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_task_box = _resolveComponent(\"task-box\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_task_box, {\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"tasks\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_task_box","tasks","$data"],"sources":["/Users/gorkem/Desktop/vue-work/vue-project/src/components/TaskPage.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <task-box \n            :tasks=\"tasks\"\n        >\n        </task-box>\n      \n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios'\n  import TaskBox from './TaskBox.vue'\n  \n  export default {\n    name: 'TaskPage',\n    components: {\n        TaskBox : TaskBox\n    },\n    data() {\n      return {\n        tasks: [],\n        monthly : [],\n        weekly : [],\n        daily : []\n      }\n    },\n    created() {\n        axios.get('https://jobs.tipiteq.com/dummy_data.json')\n          .then(response => {\n            this.tasks = Array.prototype.slice.call(Object.values(response.data));\n            this.tasks = this.tasks[0]\n            let getLength = this.tasks.length\n            for(let i = 0; i < getLength; i++){\n                if(this.tasks[i].occurrence === \"daily\"){\n                    this.daily.push(this.tasks[i])\n                }\n                if(this.tasks[i].occurrence === \"weekly\"){\n                    this.weekly.push(this.tasks[i])\n                }\n                if(this.tasks[i].occurrence === \"monthly\"){\n                    this.monthly.push(this.tasks[i])\n                }\n            }\n          }).catch(error => {\n            console.error('Error fetching tasks:', error)\n          })\n    }\n  }\n</script>\n  \n<style>\n    .container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: 100px;\n    }\n    .TaskBox {\n        display: flex;\n        flex-direction: column;\n        width: 80%;\n        border: 1px solid black;\n    }\n    .titles-task {\n        padding: 5px;\n        display: flex;\n        font-size: 20px;\n        justify-content: center;\n        align-items: center;\n    }\n    .titles-desc{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .description {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 60%;\n        margin-left: 20%;\n        padding: 5px;\n    }\n    .events {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        width: 80%;\n        margin-left: 10%;\n        border: 1px solid black;\n    }\n    .titles-event {\n        font-size: 15px;\n        font-weight: bold;\n    }\n    .event {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n    .titles-tenant{\n        font-size: 15px;\n        font-weight: bold;\n    }\n    .tenants {\n        padding: 10px;\n        border: 1px solid black;\n    }\n    .altTitles {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border: 1px solid black;\n    }\n    .occurrence{\n        padding: 10px;\n        font-weight: bold;\n\n    }\n    .priority {\n        padding: 10px;\n        font-weight: bold;\n\n    }\n    .titles-resp {\n        padding: 10px;\n        font-weight: bold;\n    }\n    .responsibleUsers {\n        padding: 10px;\n        font-weight: bold;\n\n    }\n    .titles-tenant {\n        font-size: 15px;\n        padding: 10px;\n        font-weight: bold;\n    }\n    .tenantArr {\n        padding: 10px;\n        font-weight: bold;\n    }\n    .name {\n        font-size: 15px;\n        font-weight: bold;\n    }\n</style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAMM,OANNC,UAMM,GALFC,YAAA,CAGWC,mBAAA;IAFNC,KAAK,EAAEC,KAAA,CAAAD;EAAK,mC"},"metadata":{},"sourceType":"module","externalDependencies":[]}